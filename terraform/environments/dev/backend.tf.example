# Backend configuration for Terraform state
# 
# To use this configuration:
# 1. Create an S3 bucket for Terraform state
# 2. Create a DynamoDB table for state locking
# 3. Copy this file to backend.tf
# 4. Update the values below
# 5. Run: terraform init

terraform {
  backend "s3" {
    bucket         = "your-terraform-state-bucket"
    key            = "iso-flow/dev/terraform.tfstate"
    region         = "ap-northeast-1"
    encrypt        = true
    dynamodb_table = "terraform-state-lock"
    
    # Optional: Use a different AWS profile
    # profile = "your-aws-profile"
  }
}

# Example commands to create backend resources:
#
# # Create S3 bucket
# aws s3api create-bucket \
#   --bucket your-terraform-state-bucket \
#   --region ap-northeast-1 \
#   --create-bucket-configuration LocationConstraint=ap-northeast-1
#
# # Enable versioning
# aws s3api put-bucket-versioning \
#   --bucket your-terraform-state-bucket \
#   --versioning-configuration Status=Enabled
#
# # Enable encryption
# aws s3api put-bucket-encryption \
#   --bucket your-terraform-state-bucket \
#   --server-side-encryption-configuration '{
#     "Rules": [{
#       "ApplyServerSideEncryptionByDefault": {
#         "SSEAlgorithm": "AES256"
#       }
#     }]
#   }'
#
# # Create DynamoDB table
# aws dynamodb create-table \
#   --table-name terraform-state-lock \
#   --attribute-definitions AttributeName=LockID,AttributeType=S \
#   --key-schema AttributeName=LockID,KeyType=HASH \
#   --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
#   --region ap-northeast-1