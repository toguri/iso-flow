name: Code Coverage

# このワークフローはPR時はunified-ci.ymlに統合されました
# PRがmainにマージされた後のみ実行（カバレッジ追跡用）
on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/coverage.yml'

env:
  CARGO_TERM_COLOR: always
  SQLX_OFFLINE: true

jobs:
  coverage:
    name: Generate Coverage Report
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_iso_flow
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          backend/target/
        key: ${{ runner.os }}-cargo-coverage-${{ hashFiles('backend/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-coverage-
          ${{ runner.os }}-cargo-
    
    - name: Cache tarpaulin
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin/cargo-tarpaulin
        key: ${{ runner.os }}-tarpaulin-0.27.3
    
    - name: Install tarpaulin
      run: |
        if ! command -v cargo-tarpaulin &> /dev/null; then
          cargo install cargo-tarpaulin --version 0.27.3
        fi
    
    - name: Run database migrations
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5433/test_iso_flow
      run: |
        cargo install sqlx-cli --no-default-features --features postgres
        sqlx migrate run
    
    - name: Generate coverage report
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5433/test_iso_flow
      run: |
        echo "🧪 Running tests with coverage..."
        cargo tarpaulin --out xml --verbose --workspace --exclude-files "*/migrations/*" --exclude-files "*/tests/*" -- --include-ignored
        cargo tarpaulin --print-summary
    
    - name: Upload coverage to Codecov
      if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/cobertura.xml
        flags: backend
        fail_ci_if_error: false
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          backend/cobertura.xml
        retention-days: 7
    
    - name: Generate coverage summary
      run: |
        echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        cargo tarpaulin --print-summary >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY