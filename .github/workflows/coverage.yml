name: Code Coverage

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/coverage.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/coverage.yml'

env:
  CARGO_TERM_COLOR: always
  SQLX_OFFLINE: true

jobs:
  coverage:
    name: Generate Coverage Report
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview
    
    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          backend/target/
        key: ${{ runner.os }}-cargo-coverage-${{ hashFiles('backend/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-coverage-
          ${{ runner.os }}-cargo-
    
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
    
    - name: Setup test database
      run: |
        echo "DATABASE_URL=sqlite::memory:" > .env
    
    - name: Generate coverage report
      run: |
        cargo llvm-cov clean --workspace
        cargo llvm-cov test --all-features --workspace --lcov --output-path lcov.info
        cargo llvm-cov report --text
    
    - name: Upload coverage to Codecov
      if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
      uses: codecov/codecov-action@v4
      with:
        files: backend/lcov.info
        flags: backend
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          backend/lcov.info
          backend/target/llvm-cov/html/
        retention-days: 7
    
    - name: Generate coverage summary
      run: |
        echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        cargo llvm-cov report >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY